{"version":3,"file":"emotion-styled-base.umd.min.js","sources":["../../../../node_modules/@babel/runtime/helpers/extends.js","../../../memoize/src/index.js","../../../is-prop-valid/src/index.js","../../src/utils.js","../../../utils/src/index.js","../../../unitless/src/index.js","../../../serialize/src/index.js","../../../hash/src/index.js","../../src/base.js"],"sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","// @flow\n\nexport default function memoize<V>(fn: string => V): string => V {\n  const cache = Object.create(null)\n\n  return (arg: string) => {\n    if (cache[arg] === undefined) cache[arg] = fn(arg)\n    return cache[arg]\n  }\n}\n","// @flow\nimport memoize from '@emotion/memoize'\n\ndeclare var codegen: { require: string => RegExp }\n\nconst reactPropsRegex = codegen.require('./props')\n\n// https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\nconst isPropValid = /* #__PURE__ */ memoize(\n  prop =>\n    reactPropsRegex.test(prop) ||\n    (prop.charCodeAt(0) === 111 /* o */ &&\n    prop.charCodeAt(1) === 110 /* n */ &&\n      prop.charCodeAt(2) < 91) /* Z+1 */\n)\n\nexport default isPropValid\n","// @flow\nimport type { ElementType, StatelessFunctionalComponent } from 'react'\nimport isPropValid from '@emotion/is-prop-valid'\n\nexport type Interpolations = Array<any>\n\nexport type StyledOptions = {\n  label?: string,\n  shouldForwardProp?: string => boolean,\n  target?: string\n}\n\nexport type StyledComponent<Props> = StatelessFunctionalComponent<Props> & {\n  defaultProps: any,\n  toString: () => string,\n  withComponent: (\n    nextTag: ElementType,\n    nextOptions?: StyledOptions\n  ) => StyledComponent<Props>\n}\n\nexport type PrivateStyledComponent<Props> = StyledComponent<Props> & {\n  __emotion_real: StyledComponent<Props>,\n  __emotion_base: any,\n  __emotion_styles: any,\n  __emotion_forwardProp: any\n}\n\nconst testOmitPropsOnStringTag = isPropValid\nconst testOmitPropsOnComponent = (key: string) => key !== 'theme'\n\nexport const getDefaultShouldForwardProp = (tag: ElementType) =>\n  typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96\n    ? testOmitPropsOnStringTag\n    : testOmitPropsOnComponent\n\nexport const composeShouldForwardProps = (\n  tag: PrivateStyledComponent<any>,\n  options: StyledOptions | void,\n  isReal: boolean\n) => {\n  let shouldForwardProp\n  if (options) {\n    const optionsShouldForwardProp = options.shouldForwardProp\n    shouldForwardProp =\n      tag.__emotion_forwardProp && optionsShouldForwardProp\n        ? (propName: string) =>\n            tag.__emotion_forwardProp(propName) &&\n            optionsShouldForwardProp(propName)\n        : optionsShouldForwardProp\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp\n  }\n\n  return shouldForwardProp\n}\n\nexport type CreateStyledComponent = <Props>(\n  ...args: Interpolations\n) => StyledComponent<Props>\n\nexport type CreateStyled = {\n  <Props>(\n    tag: ElementType,\n    options?: StyledOptions\n  ): (...args: Interpolations) => StyledComponent<Props>,\n  [key: string]: CreateStyledComponent,\n  bind: () => CreateStyled\n}\n","// @flow\nimport type { RegisteredCache, EmotionCache, SerializedStyles } from './types'\n\nconst isBrowser = typeof document !== 'undefined'\n\nexport function getRegisteredStyles(\n  registered: RegisteredCache,\n  registeredStyles: string[],\n  classNames: string\n) {\n  let rawClassName = ''\n\n  classNames.split(' ').forEach(className => {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(`${registered[className]};`)\n    } else {\n      rawClassName += `${className} `\n    }\n  })\n  return rawClassName\n}\n\nexport const insertStyles = (\n  cache: EmotionCache,\n  serialized: SerializedStyles,\n  isStringTag: boolean\n) => {\n  let className = `${cache.key}-${serialized.name}`\n  if (\n    // we only need to add the styles to the registered cache if the\n    // class name could be used further down\n    // the tree but if it's a string tag, we know it won't\n    // so we don't have to add it to registered cache.\n    // this improves memory usage since we can avoid storing the whole style string\n    (isStringTag === false ||\n      // we need to always store it if we're in compat mode and\n      // in node since emotion-server relies on whether a style is in\n      // the registered cache to know whether a style is global or not\n      // also, note that this check will be dead code eliminated in the browser\n      (isBrowser === false && cache.compat !== undefined)) &&\n    cache.registered[className] === undefined\n  ) {\n    cache.registered[className] = serialized.styles\n  }\n  if (cache.inserted[serialized.name] === undefined) {\n    let stylesForSSR = ''\n    let current = serialized\n    do {\n      let maybeStyles = cache.insert(\n        serialized === current ? `.${className}` : '',\n        current,\n        cache.sheet,\n        true\n      )\n      if (!isBrowser && maybeStyles !== undefined) {\n        stylesForSSR += maybeStyles\n      }\n      current = current.next\n    } while (current !== undefined)\n    if (!isBrowser && stylesForSSR.length !== 0) {\n      return stylesForSSR\n    }\n  }\n}\n\nexport * from './types'\n","// @flow\n\nlet unitlessKeys: { [key: string]: 1 } = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n}\n\nexport default unitlessKeys\n","// @flow\nimport type {\n  Interpolation,\n  SerializedStyles,\n  RegisteredCache\n} from '@emotion/utils'\nimport hashString from '@emotion/hash'\nimport unitless from '@emotion/unitless'\nimport memoize from '@emotion/memoize'\n\nconst ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\\\00d7';\" should become \"content: '\\\\\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`\n\nconst UNDEFINED_AS_OBJECT_KEY_ERROR =\n  \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\"\n\nlet hyphenateRegex = /[A-Z]|^ms/g\nlet animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g\n\nconst isCustomProperty = (property: string) => property.charCodeAt(1) === 45\nconst isProcessableValue = value => value != null && typeof value !== 'boolean'\n\nconst processStyleName = /* #__PURE__ */ memoize(\n  (styleName: string) =>\n    isCustomProperty(styleName)\n      ? styleName\n      : styleName.replace(hyphenateRegex, '-$&').toLowerCase()\n)\n\nlet processStyleValue = (\n  key: string,\n  value: string | number\n): string | number => {\n  switch (key) {\n    case 'animation':\n    case 'animationName': {\n      if (typeof value === 'string') {\n        return value.replace(animationRegex, (match, p1, p2) => {\n          cursor = {\n            name: p1,\n            styles: p2,\n            next: cursor\n          }\n          return p1\n        })\n      }\n    }\n  }\n\n  if (\n    unitless[key] !== 1 &&\n    !isCustomProperty(key) &&\n    typeof value === 'number' &&\n    value !== 0\n  ) {\n    return value + 'px'\n  }\n  return value\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  let contentValuePattern = /(attr|calc|counters?|url)\\(/\n  let contentValues = [\n    'normal',\n    'none',\n    'counter',\n    'open-quote',\n    'close-quote',\n    'no-open-quote',\n    'no-close-quote',\n    'initial',\n    'inherit',\n    'unset'\n  ]\n\n  let oldProcessStyleValue = processStyleValue\n\n  let msPattern = /^-ms-/\n  let hyphenPattern = /-(.)/g\n\n  let hyphenatedCache = {}\n\n  processStyleValue = (key: string, value: string) => {\n    if (key === 'content') {\n      if (\n        typeof value !== 'string' ||\n        (contentValues.indexOf(value) === -1 &&\n          !contentValuePattern.test(value) &&\n          (value.charAt(0) !== value.charAt(value.length - 1) ||\n            (value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")))\n      ) {\n        throw new Error(\n          `You seem to be using a value for 'content' without quotes, try replacing it with \\`content: '\"${value}\"'\\``\n        )\n      }\n    }\n\n    const processed = oldProcessStyleValue(key, value)\n\n    if (\n      processed !== '' &&\n      !isCustomProperty(key) &&\n      key.indexOf('-') !== -1 &&\n      hyphenatedCache[key] === undefined\n    ) {\n      hyphenatedCache[key] = true\n      console.error(\n        `Using kebab-case for css properties in objects is not supported. Did you mean ${key\n          .replace(msPattern, 'ms-')\n          .replace(hyphenPattern, (str, char) => char.toUpperCase())}?`\n      )\n    }\n\n    return processed\n  }\n}\n\nfunction handleInterpolation(\n  mergedProps: void | Object,\n  registered: RegisteredCache | void,\n  interpolation: Interpolation\n): string | number {\n  if (interpolation == null) {\n    return ''\n  }\n  if (interpolation.__emotion_styles !== undefined) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      interpolation.toString() === 'NO_COMPONENT_SELECTOR'\n    ) {\n      throw new Error(\n        'Component selectors can only be used in conjunction with @emotion/babel-plugin.'\n      )\n    }\n    return interpolation\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean': {\n      return ''\n    }\n    case 'object': {\n      if (interpolation.anim === 1) {\n        cursor = {\n          name: interpolation.name,\n          styles: interpolation.styles,\n          next: cursor\n        }\n\n        return interpolation.name\n      }\n      if (interpolation.styles !== undefined) {\n        let next = interpolation.next\n        if (next !== undefined) {\n          // not the most efficient thing ever but this is a pretty rare case\n          // and there will be very few iterations of this generally\n          while (next !== undefined) {\n            cursor = {\n              name: next.name,\n              styles: next.styles,\n              next: cursor\n            }\n            next = next.next\n          }\n        }\n        let styles = `${interpolation.styles};`\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          interpolation.map !== undefined\n        ) {\n          styles += interpolation.map\n        }\n\n        return styles\n      }\n\n      return createStringFromObject(mergedProps, registered, interpolation)\n    }\n    case 'function': {\n      if (mergedProps !== undefined) {\n        let previousCursor = cursor\n        let result = interpolation(mergedProps)\n        cursor = previousCursor\n\n        return handleInterpolation(mergedProps, registered, result)\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error(\n          'Functions that are interpolated in css calls will be stringified.\\n' +\n            'If you want to have a css call based on props, create a function that returns a css call like this\\n' +\n            'let dynamicStyle = (props) => css`color: ${props.color}`\\n' +\n            'It can be called directly with props or interpolated in a styled call like this\\n' +\n            \"let SomeComponent = styled('div')`${dynamicStyle}`\"\n        )\n      }\n      break\n    }\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        const matched = []\n        const replaced = interpolation.replace(\n          animationRegex,\n          (match, p1, p2) => {\n            const fakeVarName = `animation${matched.length}`\n            matched.push(\n              `const ${fakeVarName} = keyframes\\`${p2.replace(\n                /^@keyframes animation-\\w+/,\n                ''\n              )}\\``\n            )\n            return `\\${${fakeVarName}}`\n          }\n        )\n        if (matched.length) {\n          console.error(\n            '`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' +\n              'Instead of doing this:\\n\\n' +\n              [...matched, `\\`${replaced}\\``].join('\\n') +\n              '\\n\\nYou should wrap it with `css` like this:\\n\\n' +\n              `css\\`${replaced}\\``\n          )\n        }\n      }\n      break\n  }\n\n  // finalize string values (regular strings and functions interpolated into css calls)\n  if (registered == null) {\n    return interpolation\n  }\n  const cached = registered[interpolation]\n  return cached !== undefined ? cached : interpolation\n}\n\nfunction createStringFromObject(\n  mergedProps: void | Object,\n  registered: RegisteredCache | void,\n  obj: { [key: string]: Interpolation }\n): string {\n  let string = ''\n\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      string += `${handleInterpolation(mergedProps, registered, obj[i])};`\n    }\n  } else {\n    for (let key in obj) {\n      let value = obj[key]\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += `${key}{${registered[value]}}`\n        } else if (isProcessableValue(value)) {\n          string += `${processStyleName(key)}:${processStyleValue(key, value)};`\n        }\n      } else {\n        if (\n          key === 'NO_COMPONENT_SELECTOR' &&\n          process.env.NODE_ENV !== 'production'\n        ) {\n          throw new Error(\n            'Component selectors can only be used in conjunction with @emotion/babel-plugin.'\n          )\n        }\n        if (\n          Array.isArray(value) &&\n          typeof value[0] === 'string' &&\n          (registered == null || registered[value[0]] === undefined)\n        ) {\n          for (let i = 0; i < value.length; i++) {\n            if (isProcessableValue(value[i])) {\n              string += `${processStyleName(key)}:${processStyleValue(\n                key,\n                value[i]\n              )};`\n            }\n          }\n        } else {\n          const interpolated = handleInterpolation(\n            mergedProps,\n            registered,\n            value\n          )\n          switch (key) {\n            case 'animation':\n            case 'animationName': {\n              string += `${processStyleName(key)}:${interpolated};`\n              break\n            }\n            default: {\n              if (\n                process.env.NODE_ENV !== 'production' &&\n                key === 'undefined'\n              ) {\n                console.error(UNDEFINED_AS_OBJECT_KEY_ERROR)\n              }\n              string += `${key}{${interpolated}}`\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return string\n}\n\nlet labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g\n\nlet sourceMapPattern\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g\n}\n\n// this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\nlet cursor\n\nexport const serializeStyles = function(\n  args: Array<Interpolation>,\n  registered: RegisteredCache | void,\n  mergedProps: void | Object\n): SerializedStyles {\n  if (\n    args.length === 1 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].styles !== undefined\n  ) {\n    return args[0]\n  }\n  let stringMode = true\n  let styles = ''\n\n  cursor = undefined\n  let strings = args[0]\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false\n    styles += handleInterpolation(mergedProps, registered, strings)\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR)\n    }\n    styles += strings[0]\n  }\n  // we start at 1 since we've already handled the first arg\n  for (let i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i])\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR)\n      }\n      styles += strings[i]\n    }\n  }\n  let sourceMap\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, match => {\n      sourceMap = match\n      return ''\n    })\n  }\n\n  // using a global regex with .exec is stateful so lastIndex has to be reset each time\n  labelPattern.lastIndex = 0\n  let identifierName = ''\n\n  let match\n  // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName +=\n      '-' +\n      // $FlowFixMe we know it's not null\n      match[1]\n  }\n\n  let name = hashString(styles) + identifierName\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name,\n      styles,\n      map: sourceMap,\n      next: cursor,\n      toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"\n      }\n    }\n  }\n  return {\n    name,\n    styles,\n    next: cursor\n  }\n}\n","// @flow\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\n\nexport default function murmur2(str: string) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n\n  // const m = 0x5bd1e995;\n  // const r = 24;\n\n  // Initialize the hash\n\n  var h = 0\n\n  // Mix 4 bytes at a time into the hash\n\n  var k,\n    i = 0,\n    len = str.length\n  for (; len >= 4; ++i, len -= 4) {\n    k =\n      (str.charCodeAt(i) & 0xff) |\n      ((str.charCodeAt(++i) & 0xff) << 8) |\n      ((str.charCodeAt(++i) & 0xff) << 16) |\n      ((str.charCodeAt(++i) & 0xff) << 24)\n\n    k =\n      /* Math.imul(k, m): */\n      (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16)\n    k ^= /* k >>> r: */ k >>> 24\n\n    h =\n      /* Math.imul(k, m): */\n      ((k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16)) ^\n      /* Math.imul(h, m): */\n      ((h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16))\n  }\n\n  // Handle the last few bytes of the input array\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff\n      h =\n        /* Math.imul(h, m): */\n        (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16)\n  }\n\n  // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n  h ^= h >>> 13\n  h =\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16)\n\n  return ((h ^ (h >>> 15)) >>> 0).toString(36)\n}\n","// @flow\nimport * as React from 'react'\nimport type { ElementType } from 'react'\nimport {\n  getDefaultShouldForwardProp,\n  composeShouldForwardProps,\n  type StyledOptions,\n  type CreateStyled,\n  type PrivateStyledComponent\n} from './utils'\nimport { withEmotionCache, ThemeContext } from '@emotion/react'\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils'\nimport { serializeStyles } from '@emotion/serialize'\n\nconst ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\\\00d7';\" should become \"content: '\\\\\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`\n\nlet isBrowser = typeof document !== 'undefined'\n\nlet createStyled: CreateStyled = (tag: any, options?: StyledOptions) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error(\n        'You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.'\n      )\n    }\n  }\n  const isReal = tag.__emotion_real === tag\n  const baseTag = (isReal && tag.__emotion_base) || tag\n\n  let identifierName\n  let targetClassName\n  if (options !== undefined) {\n    identifierName = options.label\n    targetClassName = options.target\n  }\n\n  const shouldForwardProp = composeShouldForwardProps(tag, options, isReal)\n  const defaultShouldForwardProp =\n    shouldForwardProp || getDefaultShouldForwardProp(baseTag)\n  const shouldUseAs = !defaultShouldForwardProp('as')\n\n  return function<Props>(): PrivateStyledComponent<Props> {\n    let args = arguments\n    let styles =\n      isReal && tag.__emotion_styles !== undefined\n        ? tag.__emotion_styles.slice(0)\n        : []\n\n    if (identifierName !== undefined) {\n      styles.push(`label:${identifierName};`)\n    }\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args)\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR)\n      }\n      styles.push(args[0][0])\n      let len = args.length\n      let i = 1\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR)\n        }\n        styles.push(args[i], args[0][i])\n      }\n    }\n\n    // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n    const Styled: PrivateStyledComponent<Props> = withEmotionCache(\n      (props, cache, ref) => {\n        const finalTag = (shouldUseAs && props.as) || baseTag\n\n        let className = ''\n        let classInterpolations = []\n        let mergedProps = props\n        if (props.theme == null) {\n          mergedProps = {}\n          for (let key in props) {\n            mergedProps[key] = props[key]\n          }\n          mergedProps.theme = React.useContext(ThemeContext)\n        }\n\n        if (typeof props.className === 'string') {\n          className = getRegisteredStyles(\n            cache.registered,\n            classInterpolations,\n            props.className\n          )\n        } else if (props.className != null) {\n          className = `${props.className} `\n        }\n\n        const serialized = serializeStyles(\n          styles.concat(classInterpolations),\n          cache.registered,\n          mergedProps\n        )\n        const rules = insertStyles(\n          cache,\n          serialized,\n          typeof finalTag === 'string'\n        )\n        className += `${cache.key}-${serialized.name}`\n        if (targetClassName !== undefined) {\n          className += ` ${targetClassName}`\n        }\n\n        const finalShouldForwardProp =\n          shouldUseAs && shouldForwardProp === undefined\n            ? getDefaultShouldForwardProp(finalTag)\n            : defaultShouldForwardProp\n\n        let newProps = {}\n\n        for (let key in props) {\n          if (shouldUseAs && key === 'as') continue\n\n          if (\n            // $FlowFixMe\n            finalShouldForwardProp(key)\n          ) {\n            newProps[key] = props[key]\n          }\n        }\n\n        newProps.className = className\n        newProps.ref = ref\n\n        const ele = React.createElement(finalTag, newProps)\n        if (!isBrowser && rules !== undefined) {\n          let serializedNames = serialized.name\n          let next = serialized.next\n          while (next !== undefined) {\n            serializedNames += ' ' + next.name\n            next = next.next\n          }\n          return (\n            <>\n              <style\n                {...{\n                  [`data-emotion`]: `${cache.key} ${serializedNames}`,\n                  dangerouslySetInnerHTML: { __html: rules },\n                  nonce: cache.sheet.nonce\n                }}\n              />\n              {ele}\n            </>\n          )\n        }\n        return ele\n      }\n    )\n\n    Styled.displayName =\n      identifierName !== undefined\n        ? identifierName\n        : `Styled(${\n            typeof baseTag === 'string'\n              ? baseTag\n              : baseTag.displayName || baseTag.name || 'Component'\n          })`\n\n    Styled.defaultProps = tag.defaultProps\n    Styled.__emotion_real = Styled\n    Styled.__emotion_base = baseTag\n    Styled.__emotion_styles = styles\n    Styled.__emotion_forwardProp = shouldForwardProp\n\n    Object.defineProperty(Styled, 'toString', {\n      value() {\n        if (\n          targetClassName === undefined &&\n          process.env.NODE_ENV !== 'production'\n        ) {\n          return 'NO_COMPONENT_SELECTOR'\n        }\n        // $FlowFixMe: coerce undefined to string\n        return `.${targetClassName}`\n      }\n    })\n\n    Styled.withComponent = (\n      nextTag: ElementType,\n      nextOptions?: StyledOptions\n    ) => {\n      return createStyled(nextTag, {\n        ...options,\n        // $FlowFixMe\n        ...nextOptions,\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })(...styles)\n    }\n\n    return Styled\n  }\n}\n\nexport default createStyled\n"],"names":["_extends","module","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","memoize","fn","cache","create","arg","undefined","reactPropsRegex","testOmitPropsOnStringTag","prop","test","charCodeAt","testOmitPropsOnComponent","getDefaultShouldForwardProp","tag","composeShouldForwardProps","options","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","propName","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","split","forEach","className","push","insertStyles","serialized","isStringTag","name","styles","inserted","current","insert","sheet","next","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","value","processStyleName","styleName","replace","toLowerCase","processStyleValue","match","p1","p2","cursor","unitless","handleInterpolation","mergedProps","interpolation","__emotion_styles","anim","obj","string","Array","isArray","interpolated","createStringFromObject","previousCursor","result","cached","labelPattern","serializeStyles","args","stringMode","strings","raw","lastIndex","identifierName","exec","str","k","h","len","toString","hashString","createStyled","targetClassName","__emotion_real","baseTag","__emotion_base","label","defaultShouldForwardProp","shouldUseAs","slice","process","Styled","withEmotionCache","props","ref","finalTag","as","classInterpolations","theme","React","ThemeContext","concat","finalShouldForwardProp","newProps","displayName","defaultProps","defineProperty","withComponent","nextTag","nextOptions"],"mappings":"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"}
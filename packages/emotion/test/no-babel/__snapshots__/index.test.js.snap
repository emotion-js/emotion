// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`css @supports 1`] = `
@supports (display:grid) {
  .emotion-0 {
    display: grid;
  }
}

<div
  className="emotion-0"
/>
`;

exports[`css component as selectors (object syntax) 1`] = `"Component selectors can only be used in conjunction with babel-plugin-emotion."`;

exports[`css component selectors without target 1`] = `"Component selectors can only be used in conjunction with babel-plugin-emotion."`;

exports[`css composition 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-0:hover {
  color: hotpink;
}

<div
  className="emotion-0"
/>
`;

exports[`css composition stuff 1`] = `
.emotion-0 {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div
  className="emotion-0"
/>
`;

exports[`css composition stuff 2`] = `
.emotion-0 {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div
  className="emotion-0"
/>
`;

exports[`css composition with objects 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 30px;
  height: calc(40vw - 50px);
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-0:hover {
  color: blue;
}

.emotion-0:after {
  content: " ";
  color: red;
}

@media (min-width:420px) {
  .emotion-0 {
    color: green;
  }
}

<div
  className="emotion-0"
/>
`;

exports[`css function in expression 1`] = `
.emotion-0 {
  font-size: 20px;
  font-size: 40px;
}

<h1
  className="legacy__class emotion-0"
  scale={2}
>
  hello world
</h1>
`;

exports[`css glamorous style api & composition 1`] = `
.emotion-0 {
  font-size: 20px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<h1
  className="emotion-0"
  fontSize={20}
>
  hello world
</h1>
`;

exports[`css handles objects 1`] = `
.emotion-0 {
  float: left;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: blue;
  font-size: 20px;
  height: 50px;
  width: 20px;
}

<div
  className="emotion-0"
/>
`;

exports[`css nested array 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<div
  className="emotion-0"
/>
`;

exports[`css no dynamic 1`] = `
.emotion-0 {
  float: left;
}

<h1
  className="emotion-0"
>
  hello world
</h1>
`;

exports[`css null rule 1`] = `
<div
  className="emotion-0"
/>
`;

exports[`css object as style 1`] = `
.emotion-0 {
  font-size: 20px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<h1
  className="emotion-0"
  fontSize={20}
>
  hello world
</h1>
`;

exports[`css random expression 1`] = `
.emotion-0 {
  font-size: 20px;
  background: green;
}

@media (min-width:420px) {
  .emotion-0 {
    color: blue;
    width: 96px;
    height: 96px;
    line-height: 40px;
  }
}

<div
  className="emotion-0"
/>
`;

exports[`css random expressions undefined return 1`] = `
.emotion-0 {
  color: green;
}

<h1
  className="legacy__class emotion-0"
>
  hello world
</h1>
`;

exports[`css styled throws a nice error when using the styled shorthand without babel-plugin-emotion 1`] = `
"You're trying to use the styled shorthand without babel-plugin-emotion.
Please install and setup babel-plugin-emotion or use the function call syntax(\`styled('div')\` instead of \`styled.div\`)"
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`options are used array-css-prop 1`] = `
"import * as React from 'react'

const Component = props => <div css={[{ color: 'green' }]} {...props} />


      ↓ ↓ ↓ ↓ ↓ ↓

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."; }

import * as React from 'react';
import { jsx as ___EmotionJSX } from "@emotion/react";

var _ref = process.env.NODE_ENV === "production" ? {
  name: "v98kxt",
  styles: "color:green"
} : {
  name: "vplqcj-__fixtures__--array-css-prop--Component",
  styles: "color:green;label:__fixtures__--array-css-prop--Component;",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

const Component = props => ___EmotionJSX("div", _extends({
  css: _ref
}, props));"
`;

exports[`options are used index 1`] = `
"import * as React from 'react'

export let Button = props => {
  return (
    <>
      <button
        css={{
          color: 'hotpink'
        }}
        {...props}
      />
    </>
  )
}


      ↓ ↓ ↓ ↓ ↓ ↓

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."; }

import * as React from 'react';
import { jsx as ___EmotionJSX } from "@emotion/react";

var _ref = process.env.NODE_ENV === "production" ? {
  name: "3sn2xs",
  styles: "color:hotpink"
} : {
  name: "17qglar-__fixtures__--__fixtures__--Button",
  styles: "color:hotpink;label:__fixtures__--__fixtures__--Button;",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

export let Button = props => {
  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX("button", _extends({
    css: _ref
  }, props)));
};"
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`enzyme mount basic 1`] = `
.emotion-0 {
  background-color: red;
}

<Greeting>
  <div
    css="unknown styles"
  >
    <Noop />
    <div
      className="emotion-0"
    >
      hello
    </div>
  </div>
</Greeting>
`;

exports[`enzyme mount conditional styles 1`] = `
.emotion-0 {
  background-color: black;
}

<div
  css="unknown styles"
>
  <Noop />
  <div
    className="emotion-0"
  >
    <Noop />
  </div>
</div>
`;

exports[`enzyme mount displayName 1`] = `
.emotion-0 {
  color: hotpink;
}

<CustomDisplayName
  css="unknown styles"
>
  <Noop />
  <CustomDisplayName
    className="emotion-0"
  >
    <div
      className="emotion-0"
    >
      Hello
    </div>
  </CustomDisplayName>
</CustomDisplayName>
`;

exports[`enzyme mount empty styled 1`] = `
<Greeting>
  <Noop />
  <div
    className="emotion-0 emotion-1"
  >
    Hello
  </div>
</Greeting>
`;

exports[`enzyme mount nested 1`] = `
.emotion-0 {
  background-color: red;
}

<div>
  <Greeting>
    <div
      css="unknown styles"
    >
      <Noop />
      <div
        className="emotion-0"
      >
        hello
      </div>
    </div>
  </Greeting>
</div>
`;

exports[`enzyme mount nested displayName 1`] = `
.emotion-0 {
  color: hotpink;
}

<div>
  <CustomDisplayName
    css="unknown styles"
  >
    <Noop />
    <CustomDisplayName
      className="emotion-0"
    >
      <div
        className="emotion-0"
      >
        Hello
      </div>
    </CustomDisplayName>
  </CustomDisplayName>
</div>
`;

exports[`enzyme mount nested styled 1`] = `
.emotion-0 {
  background-color: red;
}

<div>
  <Greeting>
    <Noop />
    <div
      className="emotion-0 emotion-1"
    >
      Hello
    </div>
  </Greeting>
</div>
`;

exports[`enzyme mount nested styled with css prop 1`] = `
.emotion-0 {
  background-color: black;
}

.emotion-1 {
  color: red;
  background-color: black;
}

<div>
  <Button
    css="unknown styles"
  >
    <Noop />
    <Button
      className="emotion-0"
    >
      <Noop />
      <button
        className="emotion-1 emotion-2"
      >
        iChenLei
      </button>
    </Button>
  </Button>
</div>
`;

exports[`enzyme mount styled 1`] = `
.emotion-0 {
  background-color: red;
}

<Greeting>
  <Noop />
  <div
    className="emotion-0 emotion-1"
  >
    Hello
  </div>
</Greeting>
`;

exports[`enzyme mount styled with css prop 1`] = `
.emotion-0 {
  background-color: black;
}

.emotion-1 {
  color: red;
  background-color: black;
}

<Button
  css="unknown styles"
>
  <Noop />
  <Button
    className="emotion-0"
  >
    <Noop />
    <button
      className="emotion-1 emotion-2"
    >
      iChenLei
    </button>
  </Button>
</Button>
`;

exports[`enzyme mount theming 1`] = `
.emotion-0 {
  color: red;
  border: 2px solid red;
}

<div>
  <Button
    theme={
      Object {
        "main": "red",
      }
    }
  >
    <Noop />
    <button
      className="emotion-0 emotion-1"
    >
      Normal
    </button>
  </Button>
  <ThemeProvider
    theme={
      Object {
        "main": "blue",
      }
    }
  >
    <Button
      theme={
        Object {
          "main": "red",
        }
      }
    >
      <Noop />
      <button
        className="emotion-0 emotion-1"
      >
        Themed
      </button>
    </Button>
  </ThemeProvider>
</div>
`;

exports[`enzyme mount with array of styles as css prop 1`] = `
.emotion-0 {
  background-color: black;
  color: white;
}

<div
  css="unknown styles"
>
  <Noop />
  <div
    className="emotion-0"
  >
    Test content
  </div>
</div>
`;

exports[`enzyme mount with array of styles in a composite inner child 1`] = `
.emotion-0 {
  background-color: black;
  color: white;
}

<div>
  <Inner
    css="unknown styles"
  >
    <Noop />
    <Inner
      className="emotion-0"
    >
      <span
        className="emotion-0"
      >
        Test content
      </span>
    </Inner>
  </Inner>
</div>
`;

exports[`enzyme mount with prop containing css element 1`] = `
.emotion-0 {
  background-color: blue;
}

<Greeting
  content={
    <p
      css="unknown styles"
    >
      Hello
    </p>
  }
>
  <div>
    <p
      css="unknown styles"
    >
      <Noop />
      <p
        className="emotion-0"
      >
        Hello
      </p>
    </p>
     
    World!
  </div>
</Greeting>
`;

exports[`enzyme mount with prop containing css element not at the top level 1`] = `
.emotion-0 {
  background-color: blue;
}

<div>
  <Greeting
    content={
      <p
        css="unknown styles"
        id="something"
      >
        Hello
      </p>
    }
  >
    <div>
      <p
        css="unknown styles"
        id="something"
      >
        <Noop />
        <p
          className="emotion-0"
          id="something"
        >
          Hello
        </p>
      </p>
       
      World!
    </div>
  </Greeting>
</div>
`;

exports[`enzyme mount with prop containing css element with other label 1`] = `
.emotion-0 {
  background-color: blue;
}

<Greeting
  content={
    <p
      css="unknown styles"
      id="something"
    >
      Hello
    </p>
  }
>
  <Thing
    content={
      <div
        css="unknown styles"
      />
    }
  >
    <p
      css="unknown styles"
      id="something"
    >
      <Noop />
      <p
        className="emotion-0"
        id="something"
      >
        Hello
      </p>
    </p>
     
    World!
  </Thing>
</Greeting>
`;

exports[`enzyme mount with prop containing css element with other props 1`] = `
.emotion-0 {
  background-color: blue;
}

<Greeting
  content={
    <p
      css="unknown styles"
      id="something"
    >
      Hello
    </p>
  }
>
  <div>
    <p
      css="unknown styles"
      id="something"
    >
      <Noop />
      <p
        className="emotion-0"
        id="something"
      >
        Hello
      </p>
    </p>
     
    World!
  </div>
</Greeting>
`;

exports[`enzyme mount with prop containing regular element 1`] = `
<Test
  element={
    <button>
      Foo
    </button>
  }
>
  <button>
    Foo
  </button>
</Test>
`;

exports[`enzyme mount with styles on top level 1`] = `
.emotion-0 {
  background-color: red;
}

<Greeting
  css="unknown styles"
>
  <Noop />
  <Greeting
    className="emotion-0"
  >
    <div
      className="emotion-0"
    >
      Hello
    </div>
  </Greeting>
</Greeting>
`;

exports[`enzyme parent and child using css property 1`] = `
.emotion-0 {
  background-color: black;
}

.emotion-1 {
  color: white;
}

<div
  css="unknown styles"
>
  <Noop />
  <div
    className="emotion-0"
  >
    Test content
    <div
      css="unknown styles"
    >
      <Noop />
      <div
        className="emotion-1"
      />
    </div>
  </div>
</div>
`;

exports[`enzyme shallow basic 1`] = `
<div
  css="unknown styles"
>
  hello
</div>
`;

exports[`enzyme shallow conditional styles 1`] = `
.emotion-0 {
  background-color: black;
}

<Fragment>
  <Noop />
  <div
    className="emotion-0"
  >
    <span
      css="unknown styles"
    >
      Test content
    </span>
  </div>
</Fragment>
`;

exports[`enzyme shallow displayName 1`] = `
.emotion-0 {
  color: hotpink;
}

<Fragment>
  <Noop />
  <CustomDisplayName
    className="emotion-0"
  />
</Fragment>
`;

exports[`enzyme shallow empty styled 1`] = `
<Fragment>
  <Noop />
  <div
    className="emotion-0 emotion-1"
  >
    Hello
  </div>
</Fragment>
`;

exports[`enzyme shallow nested 1`] = `
<div>
  <Greeting>
    hello
  </Greeting>
</div>
`;

exports[`enzyme shallow nested displayName 1`] = `
<div>
  <CustomDisplayName
    css="unknown styles"
  />
</div>
`;

exports[`enzyme shallow nested styled 1`] = `
<div>
  <Greeting>
    Hello
  </Greeting>
</div>
`;

exports[`enzyme shallow nested styled with css prop 1`] = `
<div>
  <Button
    css="unknown styles"
  >
    iChenLei
  </Button>
</div>
`;

exports[`enzyme shallow styled 1`] = `
.emotion-0 {
  background-color: red;
}

<Fragment>
  <Noop />
  <div
    className="emotion-0 emotion-1"
  >
    Hello
  </div>
</Fragment>
`;

exports[`enzyme shallow styled with css prop 1`] = `
.emotion-0 {
  background-color: black;
}

<Fragment>
  <Noop />
  <Button
    className="emotion-0"
  >
    iChenLei
  </Button>
</Fragment>
`;

exports[`enzyme shallow theming 1`] = `
<div>
  <Button
    theme={
      Object {
        "main": "red",
      }
    }
  >
    Normal
  </Button>
  <ThemeProvider
    theme={
      Object {
        "main": "blue",
      }
    }
  >
    <Button
      theme={
        Object {
          "main": "red",
        }
      }
    >
      Themed
    </Button>
  </ThemeProvider>
</div>
`;

exports[`enzyme shallow with array of styles as css prop 1`] = `
.emotion-0 {
  background-color: black;
  color: white;
}

<Fragment>
  <Noop />
  <div
    className="emotion-0"
  >
    Test content
  </div>
</Fragment>
`;

exports[`enzyme shallow with array of styles in a composite inner child 1`] = `
<div>
  <Inner
    css="unknown styles"
  >
    Test content
  </Inner>
</div>
`;

exports[`enzyme shallow with prop containing css element 1`] = `
<div>
  <p
    css="unknown styles"
  >
    Hello
  </p>
   
  World!
</div>
`;

exports[`enzyme shallow with prop containing css element not at the top level 1`] = `
<div>
  <Greeting
    content={
      <p
        css="unknown styles"
        id="something"
      >
        Hello
      </p>
    }
  >
    World!
  </Greeting>
</div>
`;

exports[`enzyme shallow with prop containing css element with other label 1`] = `
<Thing
  content={
    <div
      css="unknown styles"
    />
  }
>
  <p
    css="unknown styles"
    id="something"
  >
    Hello
  </p>
   
  World!
</Thing>
`;

exports[`enzyme shallow with prop containing css element with other props 1`] = `
<div>
  <p
    css="unknown styles"
    id="something"
  >
    Hello
  </p>
   
  World!
</div>
`;

exports[`enzyme shallow with prop containing regular element 1`] = `
<button>
  Foo
</button>
`;

exports[`enzyme shallow with styles on top level 1`] = `
.emotion-0 {
  background-color: red;
}

<Fragment>
  <Noop />
  <Greeting
    className="emotion-0"
  >
    Hello
  </Greeting>
</Fragment>
`;

exports[`enzyme with prop containing css element in fragment 1`] = `
.emotion-0 {
  background-color: blue;
}

<div>
  x
  Array [
    "",
    <div
      className="emotion-0"
    >
      y
    </div>,
  ]
</div>
`;

{"version":3,"file":"emotion-server.modern.js","sources":["../src/create-instance/extract-critical.js","../src/create-instance/inline.js","../src/create-instance/stream.js","../src/index.js","../src/create-instance/index.js"],"sourcesContent":["// @flow\nimport type { EmotionCache } from '@emotion/utils'\n\nconst createExtractCritical = (cache: EmotionCache) => (html: string) => {\n  // parse out ids from html\n  // reconstruct css/rules/cache to pass\n  let RGX = new RegExp(`${cache.key}-([a-zA-Z0-9-_]+)`, 'gm')\n\n  let o = { html, ids: [], css: '' }\n  let match\n  let ids = {}\n  while ((match = RGX.exec(html)) !== null) {\n    // $FlowFixMe\n    if (ids[match[1]] === undefined) {\n      // $FlowFixMe\n      ids[match[1]] = true\n    }\n  }\n\n  o.ids = Object.keys(cache.inserted).filter((id) => {\n    if (\n      (ids[id] !== undefined ||\n        cache.registered[`${cache.key}-${id}`] === undefined) &&\n      cache.inserted[id] !== true\n    ) {\n      o.css += cache.inserted[id]\n      return true\n    }\n  })\n\n  return o\n}\n\nexport default createExtractCritical\n","// @flow\nimport type { EmotionCache } from '@emotion/utils'\n\nfunction generateStyleTag(\n  cssKey: string,\n  ids: string,\n  styles: string,\n  nonceString: string\n) {\n  return `<style data-emotion=\"${cssKey} ${ids.substring(\n    1\n  )}\"${nonceString}>${styles}</style>`\n}\n\nconst createRenderStylesToString = (\n  cache: EmotionCache,\n  nonceString: string\n) => (html: string): string => {\n  const { inserted, key: cssKey, registered } = cache\n  const regex = new RegExp(`<|${cssKey}-([a-zA-Z0-9-_]+)`, 'gm')\n\n  const seen = {}\n\n  let result = ''\n  let globalIds = ''\n  let globalStyles = ''\n\n  for (const id in inserted) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (inserted.hasOwnProperty(id)) {\n      const style = inserted[id]\n      const key = `${cssKey}-${id}`\n      if (style !== true && registered[key] === undefined) {\n        globalStyles += style\n        globalIds += ` ${id}`\n      }\n    }\n  }\n\n  if (globalStyles !== '') {\n    result = generateStyleTag(cssKey, globalIds, globalStyles, nonceString)\n  }\n\n  let ids = ''\n  let styles = ''\n  let lastInsertionPoint = 0\n  let match\n\n  while ((match = regex.exec(html)) !== null) {\n    // $FlowFixMe\n    if (match[0] === '<') {\n      if (ids !== '') {\n        result += generateStyleTag(cssKey, ids, styles, nonceString)\n        ids = ''\n        styles = ''\n      }\n      // $FlowFixMe\n      result += html.substring(lastInsertionPoint, match.index)\n      // $FlowFixMe\n      lastInsertionPoint = match.index\n      continue\n    }\n    // $FlowFixMe\n    const id = match[1]\n    const style = inserted[id]\n    if (style === true || style === undefined || seen[id]) {\n      continue\n    }\n\n    seen[id] = true\n    styles += style\n    ids += ` ${id}`\n  }\n\n  result += html.substring(lastInsertionPoint)\n\n  return result\n}\n\nexport default createRenderStylesToString\n","// @flow\nimport type { EmotionCache } from '@emotion/utils'\nimport through from 'through'\nimport tokenize from 'html-tokenize'\nimport pipe from 'multipipe'\n\nconst createRenderStylesToNodeStream = (\n  cache: EmotionCache,\n  nonceString: string\n) => () => {\n  let insed = {}\n  const tokenStream = tokenize()\n\n  const inlineStream = through(\n    function write(thing) {\n      let [type, data] = thing\n      if (type === 'open') {\n        let css = ''\n        let ids = {}\n\n        let match\n        let fragment = data.toString()\n        let regex = new RegExp(`${cache.key}-([a-zA-Z0-9-_]+)`, 'gm')\n        while ((match = regex.exec(fragment)) !== null) {\n          if (match !== null && insed[match[1]] === undefined) {\n            ids[match[1]] = true\n          }\n        }\n        Object.keys(cache.inserted).forEach((id) => {\n          if (\n            cache.inserted[id] !== true &&\n            insed[id] === undefined &&\n            (ids[id] === true ||\n              (cache.registered[`${cache.key}-${id}`] === undefined &&\n                (ids[id] = true)))\n          ) {\n            insed[id] = true\n            // $FlowFixMe flow thinks emotion.caches.inserted[id] can be true even though it's checked earlier\n            css += cache.inserted[id]\n          }\n        })\n\n        if (css !== '') {\n          this.queue(\n            `<style data-emotion=\"${cache.key} ${Object.keys(ids).join(\n              ' '\n            )}\"${nonceString}>${css}</style>`\n          )\n        }\n      }\n      this.queue(data)\n    },\n    function end() {\n      this.queue(null)\n    }\n  )\n\n  return pipe(tokenStream, inlineStream)\n}\n\nexport default createRenderStylesToNodeStream\n","// @flow\nimport createEmotionServer from './create-instance'\nimport { cache } from '@emotion/css'\n\nexport const {\n  extractCritical,\n  renderStylesToString,\n  renderStylesToNodeStream,\n} = createEmotionServer(cache)\n","// @flow\nimport type { EmotionCache } from '@emotion/utils'\nimport createExtractCritical from './extract-critical'\nimport createRenderStylesToString from './inline'\nimport createRenderStylesToStream from './stream'\n\nexport default function (cache: EmotionCache) {\n  if (cache.compat !== true) {\n    // is this good? should we do this automatically?\n    // this is only for when using the new apis (not emotion or create-emotion)\n    cache.compat = true\n  }\n  const nonceString = cache.nonce !== undefined ? ` nonce=\"${cache.nonce}\"` : ''\n  return {\n    extractCritical: createExtractCritical(cache),\n    renderStylesToString: createRenderStylesToString(cache, nonceString),\n    renderStylesToNodeStream: createRenderStylesToStream(cache, nonceString),\n  }\n}\n"],"names":["createExtractCritical","cache","html","match","RGX","RegExp","key","o","ids","css","exec","undefined","Object","keys","inserted","filter","id","registered","generateStyleTag","cssKey","styles","nonceString","substring","createRenderStylesToString","regex","seen","result","globalIds","globalStyles","hasOwnProperty","style","lastInsertionPoint","index","createRenderStylesToNodeStream","insed","tokenStream","tokenize","inlineStream","through","thing","type","data","fragment","toString","forEach","this","queue","join","pipe","extractCritical","renderStylesToString","renderStylesToNodeStream","compat","nonce","createRenderStylesToStream","createEmotionServer"],"mappings":"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"}
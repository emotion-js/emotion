{"version":3,"file":"emotion-hash.js","sources":["../src/index.js"],"sourcesContent":["// @flow\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\n\nexport default function murmur2(str: string) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n\n  // const m = 0x5bd1e995;\n  // const r = 24;\n\n  // Initialize the hash\n\n  var h = 0\n\n  // Mix 4 bytes at a time into the hash\n\n  var k,\n    i = 0,\n    len = str.length\n  for (; len >= 4; ++i, len -= 4) {\n    k =\n      (str.charCodeAt(i) & 0xff) |\n      ((str.charCodeAt(++i) & 0xff) << 8) |\n      ((str.charCodeAt(++i) & 0xff) << 16) |\n      ((str.charCodeAt(++i) & 0xff) << 24)\n\n    k =\n      /* Math.imul(k, m): */\n      (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16)\n    k ^= /* k >>> r: */ k >>> 24\n\n    h =\n      /* Math.imul(k, m): */\n      ((k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16)) ^\n      /* Math.imul(h, m): */\n      ((h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16))\n  }\n\n  // Handle the last few bytes of the input array\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff\n      h =\n        /* Math.imul(h, m): */\n        (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16)\n  }\n\n  // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n  h ^= h >>> 13\n  h =\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16)\n\n  return ((h ^ (h >>> 15)) >>> 0).toString(36)\n}\n"],"names":["str","k","h","i","len","length","charCodeAt","toString"],"mappings":"wBAKgCA,GAgB9B,IAPA,IAIIC,EAJAC,EAAI,EAKNC,EAAI,EACJC,EAAMJ,EAAIK,OACLD,GAAO,IAAKD,EAAGC,GAAO,EAO3BH,EAEiB,YAAV,OARPA,EACuB,IAApBD,EAAIM,WAAWH,IACQ,IAAtBH,EAAIM,aAAaH,KAAc,GACT,IAAtBH,EAAIM,aAAaH,KAAc,IACT,IAAtBH,EAAIM,aAAaH,KAAc,MAIU,OAAZF,IAAM,KAAiB,IAGxDC,EAEkB,YAAV,OAJRD,GAAoBA,IAAM,MAIoB,OAAZA,IAAM,KAAiB,IAEvC,YAAV,MAAJC,IAA0C,OAAZA,IAAM,KAAiB,IAK3D,OAAQE,GACN,OACEF,IAA8B,IAAxBF,EAAIM,WAAWH,EAAI,KAAc,GACzC,OACED,IAA8B,IAAxBF,EAAIM,WAAWH,EAAI,KAAc,EACzC,OAEED,EAEiB,YAAV,OAHPA,GAAyB,IAApBF,EAAIM,WAAWH,MAGyB,OAAZD,IAAM,KAAiB,IAW5D,SAJAA,EAEiB,YAAV,OAHPA,GAAKA,IAAM,MAGkC,OAAZA,IAAM,KAAiB,KAE1CA,IAAM,MAAS,GAAGK,SAAS"}